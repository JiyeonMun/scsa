C++ & OOP 과정입니다.

1. 강석민 강사 - smkang @ codenuri.co.kr

2. github.com/codenuri/scsa 에 "DAY1_사전소스.zip" 있습니다. 
   받으시면 됩니다.
   => 수업에서 강사가 만드는 코드도 이곳에 올려 드립니다.

3. 실습 환경 : visual studio 2017 이상 ( 2019, 2022)
	    g++, clang++, xcode 모두 사용가능합니다.
            강사는 "visual studio 2017" 사용합니다.

   => 1. "DAY1_사전소스.zip" 압축 풀러 보세요
   => 2. Visual Studio 실행해 보세요.
   => 3. DAY1 프로젝트를 열고 버전을 맞춰어야 합니다.
         "프로젝트 메뉴", "DAY1 속성"
         플랫폼 도구집합
         Windows SDK 버전
   => 4. "Debug", "x64" 로 빌드. 

   => 5. 소스 파일을 빌드에서 제외/추가 하는 방법

참고 : visual studio 2017 express : 완전 무료(대기업 사무실 설치 가능)
2019/2022 community : 개인 학습용도만 무료, 사무실 설치 하지 마세요.
--------------------------------------------------
C++ 소개 : C언어 + 객체지향 프로그래밍 지원하는 언어.
          => C언어의 모든 것을 포함하는 superset
  	  => 현존하는 프로그래밍 언어중 가장 어렵고, 복잡하기로 유명한 언어.

왜, C++을 배웁니까, 어디에 활용합니까 ?
=> 웹, 모바일 등에서는 거의 사용되지 않습니다.
=> 핵심 엔진이 대부분 C++ 입니다.
=> "안드로이드 OS", "Autosar(자동차 OS)", tensorflow(딥러딩 엔진)   
   "webkit(브라우져엔진)" , "DB 소스"

C/C++ : 컴파일 하면 바로 CPU 가 인식하는 기계어 코드 생성 => 빠르다는 의미

C#, java, python : 컴파일시, "중간언어"라는 단계의 코드 생성
			중간언어가 다시 기계어로 변경해서 실행
		   이유, 한개의 프로그램으로 다양한 CPU(OS)에서실행하려고.
=====================================
우리가 배워야 하는 것들
1. 객체지향 문법은 아니지만, C보다 발전된 C++ 문법 : 함수, 변수, 제어문등..

2. 객체지향 프로그래밍 ( 핵심 ) : 2일차 오후 ~ 4일차

3. C++ 표준 라이브러리 (STL) 사용법 : 5일차
=====================================
참고 사이트
isocpp.org       - C++ 표준 위원회
cppreference.com - C++ 도움말 (좀, 어렵습니다.)
godbolt.org      - 다양한 언어의 컴파일된 결과(기계어)를 보여주는 사이트
유튜브 "cppcon"    - C++ conference 동영상














