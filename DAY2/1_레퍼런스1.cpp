// 1_레퍼런스.cpp    41 page
// 중요합니다.. 꼭 이해 해야 합니다.
#include <iostream>









int main()
{
	int n1 = 10; // 변수선언
				 // => 프로그램에서 사용할 메모리를 할당하는 과정

	int* p1 = &n1;  // 포인터 변수도 결국 메모리를 차지하는 변수
					// => 정수나 실수가 아닌 주소를 보관 하겠다는 것

	int& r1 = n1;	// reference(참조) 
					// => 기존 변수에 또 다른 이름(별명, alias) 를 부여 한것

	r1 = 30;

	std::cout << n1  << std::endl; // 30
	
	std::cout << &r1 << std::endl;	// 이 결과(주소)와
	std::cout << &n1 << std::endl;	// 이 결과(주소)는 동일 합니다.

	// 주의 사항
	// 1. 포인터 변수는 "변수주소(&n1)" 로 초기화, 
	//    reference는 "변수이름(n1)" 로 초기화

	// 2. 하나의 & 연산자의 2개의 용도로 사용되는 것
	//    => 변수 이름 앞에 있으면 주소 연산자
	//    => 선언문에 있으면 "reference" 선언
	int* p2 = &n1;
	int& r2 = n1;

	// 참고, * 연산자도 문맥에 따라 의미가 다릅니다.
	// 3 * 4  => 곱하기 연산자
	// int* p => 포인터 연산자.

	// 3. reference(참조)는 반드시 초기값이 필요합니다
	int n3;  // ok. 단, 쓰레기값
	int* p3; // ok. 단, 쓰레기값(의미없는 주소값)
	int& r3; // error. 별명을 만드는데, 초기값이 없으면 안됩니다. 
}





